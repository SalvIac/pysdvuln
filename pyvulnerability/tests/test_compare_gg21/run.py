# -*- coding: utf-8 -*-
"""
@author: Salvatore Iacoletti
"""

import os
from copy import deepcopy
import numpy as np
import pandas as pd
from tqdm import tqdm
import matplotlib.pyplot as plt
from scipy.optimize import dual_annealing
import time 
from myutils.utils_pickle import save_pickle, load_pickle
from pyvulnerability.records_container import RecordsContainer
from pyvulnerability.selector import Selector
from pyvulnerability.opensees_runner import OpenseesRunner
from pyvulnerability.damage_state_classif import DamageStateClassif
from pyvulnerability.record_pair import RecordPair
from pyvulnerability.psdm_gg21 import PSDM_gg21
from pyvulnerability.damg_dep_frag_curves_noc import DamgDepFragCurvesNoC


if __name__ == "__main__":
   
    base = r"C:\Users\Salvatore\Dropbox\SalvIac\pyvulnerability\ground_motion_databases"

    # rc = RecordsContainer.load_simbad_data(base)
    # for rec in rc.records:
    #     spec = rec.generate_response_spectrum(np.array([5,6,7,8,9,10]))
    #     rec.precomp_spectrum = np.vstack([rec.precomp_spectrum, spec])
    # name = "simbad"
    
    # rc = RecordsContainer.load_goda_data(base)
    # name = "goda"
    
    rc = RecordsContainer.load_ngawest2_data(base)
    # for rec in tqdm(rc.records):
    #     spec = rec.generate_response_spectrum(np.array([0.001, 6]))
    #     rec.precomp_spectrum = np.vstack([spec[0,:], rec.precomp_spectrum, spec[-1,:]])
    rsns = rc.get_array("rsn")
    df = pd.read_csv(os.path.join(base, "NGAWest2", "pulse_like_peer.csv"))
    pulse_rsn = df['Record Seq. #'].to_list()
    del_i = [i for i, rsn in enumerate(rsns) if rsn in pulse_rsn]
    print(len(rc.records))
    rc.delete_records(del_i)
    name = "nga"
    
    
    # rc = RecordsContainer.load_ngawest2_data_comps(base)
    # records = list()
    # for recs in rc.records:
    #     records.append( recs.choose(recs.rec1.get_avgsa(0.5),
    #                                 recs.rec2.get_avgsa(0.5)) )
    # rc = RecordsContainer(records, database=rc.database, sourcepath=rc.sourcepath)

    # other filters
    print(len(rc.records))
    rc.filter_sign_duration(1)
    print(len(rc.records))
    
    
    #%%

    name = "nga"
    n= 800
    capacity_curve = pd.read_csv("capacity_curve.csv").to_numpy()
    
    opr = OpenseesRunner(capacity_curve)
    fund_period = opr.get_fund_period()
    dsc = DamageStateClassif(opr.capacity_curve)
    # outputs = opr.run_cyclic()
    # axs = opr.plot_force_disp()
    # axs[0].set_xlim(0,0.7)
    # axs[0].set_ylim(0,3)
    # import matplotlib.pyplot as plt
    # plt.savefig('demo.png', transparent=True)

    
    #%%
    
    ravg = rc.get_avgsas(0.01, 0.6)
    ims = ravg
    sel = Selector(ims, rc, "avgSA(0.0-0.6) (m/s2)")
    n = 800

    
    #%% simulating annealing selection

    # # inds1, inds2, sf1, sf2, sample2d = sel.simul_ann(n)
    # # save_pickle((inds1, inds2, sf1, sf2, sample2d), name+"_"+str(n)+"_gms")
    # (inds1, inds2, sf1, sf2, sample2d) = load_pickle(name+"_"+str(n)+"_gms")
    
    inds1, inds2, sample2d = sel.sample2d_ind(num=n)
    sf1, sf2 = np.ones_like(inds1), np.ones_like(inds1)
    
    # plots selection
    sel.scatter(sample2d[:,0], sample2d[:,1])
    sel.hist2d(sample2d, bar_width=1., range_bin=[0., sel.max_im])

    
    #%% run all selected ground motions with opensees    

    res = list()
    for i, (ind1, ind2, s1, s2) in tqdm(enumerate(zip(inds1, inds2, sf1, sf2))):
        rp = RecordPair(rc.records[ind1], rc.records[ind2], 50., s1, s2)
        _ = opr.run(rp.get_time_gmr(unit="m/s2"))
        res.append( {"rp": rp, "opr": deepcopy(opr),
                      "ind1": ind1, "ind2": ind2, "s1": s1, "s2": s2,
                      "im_g1": sample2d[i,0], "im_g2": sample2d[i,1]} )
    save_pickle(res, name+"_"+str(n)+"_nltha_sel_rob")
    # res = load_pickle(name+"_"+str(n)+"_nltha")
    
    
    #%% PSDM and fragility curves from Gentile and Galasso (2021)

    psdm = PSDM_gg21(res, dsc)
    psdm.check_plots()

    # no collapses
    ddfc = DamgDepFragCurvesNoC(psdm, dsc)
    ddfc.check_plots(unit="g")
    
