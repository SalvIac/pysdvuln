# -*- coding: utf-8 -*-
"""
@author: Salvatore Iacoletti
"""

import os
import time
import numpy as np
import pandas as pd
from pyvulnerability.record import Record
from pyvulnerability.opensees_runner import OpenseesRunner


if __name__ == "__main__":
    
    gmr = np.loadtxt("INPUT.txt")
    rec = Record(gmr[:,1], t_step=0.005, unit="g")
    # rec.plot_inputs()
    # rec.plot_acc_vel_disp(unit="g")
    
    capacity_curve = pd.read_csv("test.csv").to_numpy()
    capacity_curve[:,1] = capacity_curve[:,1]/1e3/9.81
    
    opr = OpenseesRunner(capacity_curve)
    opr.DEGRADATION = False
    res = opr.run(rec.get_time_gmr(unit="m/s2", resting_time=10))
                  # mat="Hysteretic")

    opr.plot_acc_disp()
    opr.plot_force_disp()
    
    print(opr.get_max_disp(), opr.calculate_hyst_energy()*1e3)
    
