# -*- coding: utf-8 -*-
"""
@author: Salvatore Iacoletti
"""

import os
import numpy as np
import pandas as pd
from tqdm import tqdm
from myutils.utils_pickle import save_pickle, load_pickle
from pyvulnerability.records_container import RecordsContainer
from pyvulnerability.record_pair import RecordPair
from pyvulnerability.selector import Selector


if __name__ == "__main__":
   
    base = r"C:\Users\Salvatore\Dropbox\SalvIac\ground_motion_databases"

    # rc = RecordsContainer.load_simbad_data(base)
    # for rec in rc.records:
    #     spec = rec.generate_response_spectrum(np.array([5,6,7,8,9,10]))
    #     rec.precomp_spectrum = np.vstack([rec.precomp_spectrum, spec])
    # name = "simbad"
    
    # rc = RecordsContainer.load_goda_data(base)
    # name = "goda"
    
    rc = RecordsContainer.load_ngawest2_data(base)
    # for rec in tqdm(rc.records):
    #     spec = rec.generate_response_spectrum(np.array([0.001, 6]))
    #     rec.precomp_spectrum = np.vstack([spec[0,:], rec.precomp_spectrum, spec[-1,:]])
    rsns = rc.get_array("rsn")
    df = pd.read_csv(os.path.join(base, "NGAWest2", "pulse_like_peer.csv"))
    pulse_rsn = df['Record Seq. #'].to_list()
    del_i = [i for i, rsn in enumerate(rsns) if rsn in pulse_rsn]
    print(len(rc.records))
    rc.delete_records(del_i)
    name = "nga"
    
    
    # rc = RecordsContainer.load_ngawest2_data_comps(base)
    # records = list()
    # for recs in rc.records:
    #     records.append( recs.choose(recs.rec1.get_avgsa(0.5),
    #                                 recs.rec2.get_avgsa(0.5)) )
    # rc = RecordsContainer(records, database=rc.database, sourcepath=rc.sourcepath)

    # other filters
    print(len(rc.records))
    rc.filter_sign_duration(1)
    print(len(rc.records))
    
        
    #%% period to use and selector
    
    fund_period = 1.0 # 0.3, 0.6, 1.0
    
    ravg = rc.get_sas(fund_period)
    ims = ravg
    sel = Selector(ims, rc, min_im=0., max_im=2.*9.81, bins=10,
                   imt="SA(T1) (m/s2)")
    n = 1000

    
    #%% simulating annealing selection

    inds1, inds2, sf1, sf2, sample2d = sel.simul_ann(n)
    save_pickle((inds1, inds2, sf1, sf2, sample2d),
                name+"_"+str(n)+"_gms_sa_3_{}".format(str(fund_period).replace(".","")))
    
    # sel.set_fitness_arrays(ravg2)
    # sample2d = sel.get_sample2d_inds(inds1, inds2, sf1, sf2)
    
    # plots selection
    sel.scatter(sample2d[:,0], sample2d[:,1], edgecolors='k')
    sel.hist2d(sample2d, bar_width=1.)
    
    
    #%% save gms pairs directly
    
    rec_pairs = list()
    for i, (ind1, ind2, s1, s2) in enumerate(zip(inds1, inds2, sf1, sf2)):
        rp = RecordPair(rc.records[ind1], rc.records[ind2], s1, s2, 40., 10.)
        rec_pairs.append( {"rp": rp,
                           "ind1": ind1, "ind2": ind2, "s1": s1, "s2": s2,
                           "im_g1": sample2d[i,0], "im_g2": sample2d[i,1]} )
    save_pickle(rec_pairs, name+"_"+str(n)+"_pairs_sa_3_{}".format(str(fund_period).replace(".","")))
    
