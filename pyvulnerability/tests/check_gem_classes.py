# -*- coding: utf-8 -*-
"""
@author: Salvatore Iacoletti
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import openseespy.opensees as ops
from myutils.search_file_in_folder import (search_filenames_in_folder,
                                           search_filepaths_in_folder)
from pyvulnerability.base_sdof import material_martins_silva, get_fund_period


if __name__ == '__main__':
    
    # base = r"C:\Users\Salvatore\Documents\GitHub/"
    base = r"C:\Users\Salvatore\Dropbox\SalvIac/"
    path = base+"global_fragility_vulnerability\capacity/"
    names = search_filenames_in_folder(path)
    classes = [name.replace(".csv", "") for name in names]
    
    filepaths = search_filepaths_in_folder(path)
    
    capacity_curve_short = np.array([[0.,0.02, 0.05],[0., 15000/1e3/9.81, 15000/1e3/9.81]]).T
    print(get_fund_period(capacity_curve_short))
    capacity_curve_mid = np.array([[0.,0.05, 0.25],[0., 7500/1e3/9.81, 7500/1e3/9.81]]).T
    print(get_fund_period(capacity_curve_mid))
    capacity_curve_long = np.array([[0.,0.15, 1.125],[0., 1500/1e3/9.81, 1500/1e3/9.81]]).T
    print(get_fund_period(capacity_curve_long))

    fig, ax = plt.subplots(1,1)
    periods = dict()
    for file, cl in zip(filepaths, classes):
        
        # if cl in ["CR_LFINF-DUL_H4", "CR_LFINF-DUL_H8"]:
        capacity_curve = pd.read_csv(file).to_numpy()
        
        if capacity_curve.shape[0] > 3:
            mask = np.ones(len(capacity_curve), dtype=bool)
            mask[[1]] = False
            capacity_curve2 = capacity_curve[mask,:]
        else:
            capacity_curve2 = capacity_curve
            
        ax.plot(capacity_curve[:,0], capacity_curve[:,1], marker="o",
                markersize=2, color=[0.5,0.5,0.5], lw=0.5) #, label=cl)#, color=[0.5,0.5,0.5])
        
        period1 = get_fund_period(capacity_curve)
        periody = get_fund_period(capacity_curve2)
        periods[cl] = {"T1": period1, "Ty": periody}

    # ax.plot(capacity_curve_short[:,0], capacity_curve_short[:,1], marker="o",
    #         markersize=2, color="r", label="stiff structure, low ductility")
    # ax.plot(capacity_curve_mid[:,0], capacity_curve_mid[:,1], marker="o",
    #         markersize=2, color="b", label="mid stiffness, mid ductility")
    # ax.plot(capacity_curve_long[:,0], capacity_curve_long[:,1], marker="o",
    #         markersize=2, color="g", label="flexible structure, high ductility")
    # ax.legend()
    ax.set_xlabel("Sd (m)")
    ax.set_ylabel("Sa (g)")
    
    plt.show()
    
    
    t1s = [periods[cl]["T1"] for cl in classes]
    fig, ax = plt.subplots(1,1)
    res = ax.hist(t1s, bins=40)
    plt.show()
    
    
    max_disp = list()
    yield_disp = list()
    max_cap = list()
    pers = list()
    for file, cl in zip(filepaths, classes):
        pers.append( periods[cl]["T1"] )
        capacity_curve = pd.read_csv(file).to_numpy()
        period1 = get_fund_period(capacity_curve)
        max_cap.append(np.max(capacity_curve[:,1]))
        max_disp.append(np.max(capacity_curve[:,0]))
        if capacity_curve.shape[0] == 3:
            yield_disp.append(capacity_curve[1,0])
        else:
            yield_disp.append(capacity_curve[2,0])

    fig, ax = plt.subplots(1,1)
    res = ax.scatter(t1s, max_cap, s=10)
    ax.set_xscale("log")
    ax.set_yscale("log")
    plt.show()
    
    