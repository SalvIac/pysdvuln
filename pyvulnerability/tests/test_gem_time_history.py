# -*- coding: utf-8 -*-
"""
@author: Salvatore Iacoletti
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import eqsig
import openseespy.opensees as ops
from pyvulnerability.base_sdof import (geometry, 
                                                 material_martins_silva,
                                                 time_history_analysis)


if __name__ == '__main__':

    # base = r"C:\Users\Salvatore\Documents\GitHub/"
    base = r"C:\Users\Salvatore\Dropbox\SalvIac/"
    # SRC_LDUAL-DUH_H1 /S_LFM-DUH_H35 /CR_LDUAL-DUH_H1
    filepath = base+r"global_fragility_vulnerability\capacity/CR_LDUAL-DUH_H1.csv" # SRC_LDUAL-DUH_H1
    capacity_curve = pd.read_csv(filepath).to_numpy()
    degradation = True

    damping = 0.05

    record_filename = 'test_motion_dt0p01.txt'
    motion_step = 0.01
    rec = np.loadtxt(record_filename)
    ground_motion = np.vstack([np.arange(0., len(rec) * motion_step, motion_step),
                               rec]).transpose()
    acc_signal = eqsig.AccSignal(rec, motion_step)
    


    ops.wipe()
    _, period = material_martins_silva(capacity_curve, degradation=degradation)
    
    
    periods = np.array([period])
    resp_u, resp_v, resp_a = eqsig.sdof.response_series(motion=rec, 
                                                        dt=motion_step,
                                                        periods=periods,
                                                        xi=damping)

    
    geometry()
    
    import time
    tt = time.time()
    outputs = time_history_analysis(ground_motion, damping)
    print(time.time() - tt)

    fig, axs = plt.subplots(nrows=2, sharex=True)
    axs[0].plot(acc_signal.time, resp_u[0], label="Eqsig")
    axs[0].plot(outputs["time"], outputs["disp"], label="Opensees", ls="--")
    axs[0].set_xlabel("Time [s]")
    axs[0].set_ylabel("Displacement [m]")
    axs[1].plot(acc_signal.time, resp_a[0], label="Eqsig")  # Elastic solution
    time = acc_signal.time
    acc_opensees_elastic = np.interp(time, outputs["time"], outputs["accel"]) - rec
    axs[1].plot(time, acc_opensees_elastic, label="Opensees", ls="--")
    axs[1].set_xlabel("Time [s]")
    axs[1].set_ylabel("Acceleration [m/s2]")
    axs[1].legend()
    plt.show()


    fig, axs = plt.subplots(2,1)
    axs[0].plot(outputs["rel_disp"], outputs["force"])
    axs[0].plot(capacity_curve[:,0], capacity_curve[:,1]*9.81)
    axs[0].set_xlabel("Displacement [m]")
    axs[0].set_ylabel("Acceleration [m/s2]")
    axs[1].plot(outputs["time"], outputs["rel_disp"])
    axs[1].set_xlabel("Time [s]")
    axs[1].set_ylabel("Displacement [m]")
    plt.show()
    

