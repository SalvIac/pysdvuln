# -*- coding: utf-8 -*-
"""
@author: Salvatore Iacoletti
"""

import numpy as np
from tqdm import tqdm
import matplotlib.pyplot as plt
from pyvulnerability.records_container import RecordsContainer
from pyvulnerability.selector import Selector


if __name__ == "__main__":
   
    base = r"C:\Users\Salvatore\Dropbox\SalvIac\pyvulnerability\ground_motion_databases"
    rc = RecordsContainer.load_simbad_data(base)
    name = "simbad"
    
    # other filters
    print(len(rc.records))
    rc.filter_sign_duration(1)
    print(len(rc.records))
    
    fund_period = 0.5
    ravg = rc.get_avgsas_T(fund_period)
    ims = ravg


    #%% simulating annealing selection

    sel = Selector(ims, rc, imt="avgSA (m/s2)")
    n = 400


    #%% simple selection sorting PGA
    
    r0 = rc.get_sas(0.)
    inds = np.argsort(r0)[-800:]
    np.random.shuffle(inds)
    inds1 = inds[:400]
    inds2 = inds[400:800]
    
    sample2d = sel.get_sample2d_inds(inds1, inds2)
    sel.scatter(sample2d[:,0], sample2d[:,1])
    sel.hist2d(sample2d, bar_width=1.)

    
    #%% various kind of sampling 1d and 2d
    
    combos = sel.get_pair_combos()
    sel.scatter(combos[:,0], combos[:,1])
    sel.hist2d(combos, bar_width=1.)

    sel.get_distr_im(numbins=50, plot=True)
    
    sel.sample1d_ind(num=n)

    _, _, sample2d = sel.sample2d_ind(num=n)
    sel.scatter(sample2d[:,0], sample2d[:,1])
    sel.hist2d(sample2d, bar_width=1.)

    sel.sample1d_im(num=n, numbins=50)

    sample2d = sel.sample2d_im(num=n, numbins=50)
    sel.scatter(sample2d[:,0], sample2d[:,1])
    sel.hist2d(sample2d, bar_width=1.)

    
    #%% simulating annealing selection

    inds1, inds2, sf1, sf2, sample2d = sel.simul_ann(n, maxiter=10)
    
    # plots selection
    sel.scatter(sample2d[:,0], sample2d[:,1])
    sel.hist2d(sample2d, bar_width=1.)
    
