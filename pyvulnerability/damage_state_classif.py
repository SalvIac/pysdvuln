# -*- coding: utf-8 -*-
"""
@author: Salvatore Iacoletti
"""

import numpy as np


class DamageStateClassif():
    '''
    damage states from capacity according to Martins and Silva (2020)
    '''
    def __init__(self, capacity_curve):
        self.damage_model_drift = self.get_damage_model_drift(capacity_curve)
        

    @classmethod
    def get_damage_model_drift(cls, capacity_curve):
        if capacity_curve.shape[0] == 3:
            dy = capacity_curve[1,0]
        else:
            dy = capacity_curve[2,0]
        du = capacity_curve[-1,0]
        damage_model_drift = [0.75*dy, 0.5*dy+0.33*du, 0.25*dy+0.67*du, du]
        return damage_model_drift

    
    def classify(self, max_drift):
        return np.searchsorted(self.damage_model_drift+[1e9], max_drift)
        
